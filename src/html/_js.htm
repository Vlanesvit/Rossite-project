<script>
	function setRealHeight() {
		const realHeight = window.innerHeight + "px";
		document.documentElement.style.setProperty("--real-height", realHeight);
	}

	window.addEventListener("load", setRealHeight);
	window.addEventListener("resize", setRealHeight);

	function initHeaderHeight() {
		const header = document.querySelector(".rs-header");
		const menuItemDropdowns = header.querySelectorAll(".menu__list .menu__dropdown");

		function updateHeaderHeight(includeDropdown = false) {
			let totalHeight = header.clientHeight;
			header.style.setProperty("--header-height", `${totalHeight}px`);

			if (!includeDropdown) {
				return;
			} else if (includeDropdown) {
				const maxDropdownHeight = Math.max(
					...Array.from(document.querySelectorAll(".menu__dropdown_block")).map(block => block.clientHeight)
				);
				totalHeight += maxDropdownHeight;
			}

			header.style.setProperty("--header-height", `${totalHeight}px`);
		}

		menuItemDropdowns.forEach(item => {
			item.addEventListener("mouseenter", function () {
				header.classList.add("_header-hover", "_header-change-height");
				updateHeaderHeight(true);
			});
			item.addEventListener("mouseleave", function () {
				if (!document.documentElement.classList.contains("region-menu-open")) {
					header.classList.remove("_header-hover");
				}
				header.classList.remove("_header-change-height");
				updateHeaderHeight();
			});
		});

		updateHeaderHeight();

		function handleResizeAndScroll() {
			updateHeaderHeight();

		}

		window.addEventListener("resize", handleResizeAndScroll);
		window.addEventListener("scroll", handleResizeAndScroll);
	}

	window.addEventListener("load", function () {
		setTimeout(() => {
			initHeaderHeight();
		}, 100);
	});
</script>

<script>
	const loader = document.querySelector(".mg-loader");
	const percentageDisplay = document.getElementById("mg-percentage");
	let hideLoaderCalled = false;
	let resourcesToLoad = 0;
	let resourcesLoaded = 0;
	let targetPercentage = 0;

	/*************  ✨ Codeium Command ⭐  *************/
	/******  85af270f-a02c-4653-afbf-07657dcee47b  *******/
	function showLoader() {
		document.body.classList.add("lock");
		loader.classList.add("show");
		loader.classList.remove("hide");
	}

	function hideLoader() {
		document.body.classList.remove("lock");

		if (hideLoaderCalled) return;

		loader.classList.add("hide");
		loader.classList.remove("show");

		// Диспатчим пользовательское событие 'loaderEnd'
		const event = new Event("loaderEnd");
		document.dispatchEvent(event);

		hideLoaderCalled = true;
	}

	function updatePercentage() {
		targetPercentage = resourcesToLoad > 0
			? Math.min(Math.floor((resourcesLoaded / resourcesToLoad) * 100), 100)
			: 100;

		let currentPercentage = parseInt(percentageDisplay.textContent) || 0;

		const animate = () => {
			if (currentPercentage < targetPercentage) {
				currentPercentage++;
				percentageDisplay.textContent = currentPercentage + "%";
				requestAnimationFrame(animate);
			} else if (currentPercentage === 100 && document.readyState === "complete") {
				hideLoader();
			}
		};
		animate();
	}

	function trackResourceLoad() {
		resourcesLoaded++;
		updatePercentage();

		if (resourcesLoaded >= resourcesToLoad) {
			if (document.readyState === "complete") {
				if (parseInt(percentageDisplay.textContent) === 100) {
					hideLoader();
				}
			} else {
				window.addEventListener("load", () => {
					if (parseInt(percentageDisplay.textContent) === 100) {
						hideLoader();
					}
				});
			}
		}
	}

	function loadResources() {
		resourcesToLoad = 0;
		resourcesLoaded = 0;
		percentageDisplay.textContent = "0%";

		// Отслеживание изображений
		const images = document.querySelectorAll("img");
		resourcesToLoad += images.length;

		images.forEach((img) => {
			if (img.complete) {
				trackResourceLoad();
			} else {
				img.addEventListener("load", trackResourceLoad);
				img.addEventListener("error", trackResourceLoad);
			}
		});

		// Отслеживание видео
		const videos = document.querySelectorAll("video");
		resourcesToLoad += videos.length;

		videos.forEach((video) => {
			if (video.readyState >= 3) {
				trackResourceLoad();
			} else {
				video.addEventListener("loadeddata", trackResourceLoad);
				video.addEventListener("error", trackResourceLoad);
			}
		});

		// // Отслеживание шрифтов (для Safari)
		// if (document.fonts) {
		// 	const fontLoadPromises = Array.from(document.fonts).map((font) =>
		// 		font.status === "loaded" ? Promise.resolve() : font.load()
		// 	);
		// 	Promise.all(fontLoadPromises).then(trackResourceLoad);
		// 	resourcesToLoad += fontLoadPromises.length;
		// }

		// Отслеживание скриптов
		const scriptToLoad = document.querySelector(
			"script[src*='app.min.js'], script[src*='app.js']"
		);
		if (scriptToLoad) {
			scriptToLoad.addEventListener("load", trackResourceLoad);
			scriptToLoad.addEventListener("error", trackResourceLoad);
		}

		// Если ресурсов нет, скрываем загрузчик
		if (resourcesToLoad === 0) {
			hideLoader();
		}
	}

	// Добавляем обработчики для DOM и загрузки
	window.addEventListener("DOMContentLoaded", () => {
		showLoader();
		loadResources();
	});
</script>

<script src="js/app.min.js" defer></script>